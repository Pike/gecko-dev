<?xml version="1.0"?>

<!-- This Source Code Form is subject to the terms of the Mozilla Public
   - License, v. 2.0. If a copy of the MPL was not distributed with this
   - file, You can obtain one at http://mozilla.org/MPL/2.0/. -->

<bindings id="localizationBindings"
          xmlns="http://www.mozilla.org/xbl">

  <binding id="xul">
    <implementation implements="nsIDOMEventListener">
      <constructor>
        <![CDATA[
          const { utils: Cu } = Components;

          Cu.import('resource://gre/modules/L10nService.jsm');
          Cu.import('resource://gre/modules/XULLocalization.jsm');

          const resIds = Array.from(this.children).map(
            child => child.getAttribute('src')
          );

          function requestBundles(requestedLangs = new Set(navigator.languages)) {
            return Promise.resolve().then(() => {
              const {
                resBundles
              } = L10nService.getResources(requestedLangs, resIds);

              return resBundles;
            });
          }

          const name = this.getAttribute('name') || Symbol.for('anonymous l10n');
          if (!document.l10n.has(name)) {
            document.l10n.set(name, createXULLocalization(requestBundles));
          }
          const l10n = document.l10n.get(name);

          const rootId = this.getAttribute('for');
          const rootElem = rootId ? document.getElementById(rootId) : null;
          this.root = rootElem
            || document.getBindingParent(this)
            || document.documentElement;
          document.l10n.observeRoot(this.root, l10n);
          document.l10n.translateRoot(this.root);
        ]]>
      </constructor>

      <destructor>
        <![CDATA[
          document.l10n.disconnectRoot(this.root);
          // XXX check if l10n is used by any other bindings and delete it if 
          // it isn't
        ]]>
      </destructor>

      <field name="root">null</field>

    </implementation>
  </binding>

</bindings>
